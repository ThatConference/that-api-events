input EventQueryInput {
  id: ID
  slug: String
}

input EventCreateInput {
  "The event friendly name"
  name: String!

  "What is this, in a few words?"
  slogan: String!

  "Friendly unique id to identify event. Follows path name, e.g. wi/2012"
  slug: String!

  "A short description about this event"
  description: String!

  "Starting day of the event."
  startDate: Date!

  "Ending day of the event."
  endDate: Date!

  "The year this event takes place in."
  year: Int!

  "The locations where this event will take place."
  venues: [ID]

  "Main contact email address."
  email: EmailAddress!

  "Main phone number."
  phoneNumber: PhoneNumber

  "Website"
  website: URL!

  "Logo for event. SVG Preferred format"
  logo: URL

  "Stripe checkout success URL for this event"
  checkoutSuccess: URL

  "Stripe checkout cancelled URL for this event"
  checkoutCancel: URL

  "Email providers reference to template used for transactional email of purchased ticket for event"
  emailTemplateTicketPurchased: String

  "date/time when session voting opens for event"
  voteOpenDate: Date

  "date/time when session voting closes for event"
  voteCloseDate: Date

  "date/time when call for speakers opens for event"
  callForSpeakersOpenDate: Date

  "date/time when call for speakers closes for event"
  callForSpeakersCloseDate: Date

  "date/time when ON THAT call for speakers opens"
  callForOnSpeakersOpenDate: Date

  "date/time when ON THAT call for speakers closes"
  callForOnSpeakersCloseDate: Date

  "date/time ticket sales start"
  ticketsOnSaleFrom: Date

  "date/time ticket sales stop"
  ticketsOnSaleUntil: Date

  "When true a ticket is required to mutate session in this event"
  isTicketRequiredToMutate: Boolean

  "When true a ticket is required to join a session in this event"
  isTicketRequiredToJoin: Boolean

  "When true membership holders can mutate a session in this event"
  canMembershipMutate: Boolean

  "When true membership holders can join a session in this event"
  canMembershipJoin: Boolean

  "Will this event show in the list of events for a community. Active or not active"
  isFeatured: Boolean

  "This event is Active. It has current activities happening"
  isActive: Boolean

  "The community this Event is part of"
  community: Slug!

  "Represents the overall color theme for this event"
  theme: EventThemeCreateInput

  "Type of event"
  type: EventType
}

input EventUpdateInput {
  "The event friendly name"
  name: String

  "What is this, in a few words?"
  slogan: String

  "Friendly unique id to identify event. Follows path name, e.g. wi/2012"
  slug: String

  "A short description about this event"
  description: String

  "Starting day of the event."
  startDate: Date

  "Ending day of the event."
  endDate: Date

  "The year this event takes place in."
  year: Int

  "The locations where this event will take place."
  venues: [ID]

  "Main contact email address."
  email: EmailAddress

  "Main phone number."
  phoneNumber: PhoneNumber

  "Website"
  website: URL

  "Logo for event. SVG Preferred format"
  logo: URL

  "Stripe checkout success URL for this event"
  checkoutSuccess: URL

  "Stripe checkout cancelled URL for this event"
  checkoutCancel: URL

  "Email providers reference to template used for transactional email of purchased ticket for event"
  emailTemplateTicketPurchased: String

  "date/time when session voting opens for event"
  voteOpenDate: Date

  "date/time when session voting closes for event"
  voteCloseDate: Date

  "date/time when call for speakers opens for event"
  callForSpeakersOpenDate: Date

  "date/time when call for speakers closes for event"
  callForSpeakersCloseDate: Date

  "date/time when ON THAT call for speakers opens"
  callForOnSpeakersOpenDate: Date

  "date/time when ON THAT call for speakers closes"
  callForOnSpeakersCloseDate: Date

  "date/time ticket sales start"
  ticketsOnSaleFrom: Date

  "date/time ticket sales stop"
  ticketsOnSaleUntil: Date

  "When true a ticket is required to mutate session in this event"
  isTicketRequiredToMutate: Boolean

  "When true a ticket is required to join a session in this event"
  isTicketRequiredToJoin: Boolean

  "When true membership holders can mutate a session in this event"
  canMembershipMutate: Boolean

  "When true membership holders can join a session in this event"
  canMembershipJoin: Boolean

  "Will this event show in the list of events for a comunity. Active or not active"
  isFeatured: Boolean

  "This event is Active. It has current activities happening"
  isActive: Boolean

  "The community this Event is part of"
  community: Slug

  "Represents the overall color theme for this event"
  theme: EventThemeUpdateInput

  "Type of event"
  type: EventType
}
