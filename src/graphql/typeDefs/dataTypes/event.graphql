"Everything you've ever wanted about THAT Events."
type Event @key(fields: "id") {
  "The THAT unique id for a given event."
  id: ID!

  "The event friendly name"
  name: String!

  "Friendly unique id to identify event. Follows path name, e.g. wi/2012"
  slug: String!

  "What is this, in a few words?"
  slogan: String

  "A short description about this event"
  description: String

  "Starting day of the event."
  startDate: Date

  "Ending day of the event."
  endDate: Date

  "The year this event takes place in."
  year: Int

  "The locations where this event will take place."
  venues: [Venue]

  "Main contact email address."
  email: EmailAddress

  "Main phone number."
  phoneNumber: PhoneNumber

  "Website"
  website: URL

  "Logo for event. SVG Preferred format"
  logo: URL

  "Stripe checkout success URL for this event"
  checkoutSuccess: URL

  "Stripe checkout cancelled URL for this event"
  checkoutCancel: URL

  "Email providers reference to template used for transactional email of purchased ticket for event"
  emailTemplateTicketPurchased: String

  "List of this event's milestones in ascending chronological order"
  milestones: [Milestone]

  "List of this event's notifications"
  notifications: [Notification]

  "The list of partners for a given event"
  partners: [Partner]

  # "The list of sessions for a given event, onOrAfter: OPTIONAL, Returns results including date and after, daysAfter: OPTIONAL, Number of days to include after onOrAfter date"
  # sessions(onOrAfter: Date, daysAfter: Int): [AcceptedSession]

  """
  Any event sessions.
  Defaults: status: [APPROVED], filter: UPCOMING, pageSize: 20 (max: 255).
  orderBy only valid with filter: ALL (and defaults desc).
  DOES NOT RETURN SESSIONS WITHOUT STARTTIME FIELD
  """
  sessions(
    status: [SessionStatus]
    orderBy: SessionOrderBy
    filter: SessionFilter
    asOfDate: Date
    pageSize: Int
    cursor: String
  ): PagedAcceptedSession

  "Downloadable Schedule formats"
  scheduleDownload: ScheduleDownload

  "Calculated based on NOW and voting open and close dates"
  isVotingOpen: Boolean

  "date/time when session voting opens for event"
  voteOpenDate: Date

  "date/time when session voting closes for event"
  voteCloseDate: Date

  "is call for speakers AT THAT open or not, calculated"
  isCallForSpeakersOpen: Boolean!

  "is call for speakers ON THAT open or not. Calculated"
  isCallForOnSpeakersOpen: Boolean!

  "date/time when call for speakers opens for event"
  callForSpeakersOpenDate: Date

  "date/time when call for speakers closes for event"
  callForSpeakersCloseDate: Date

  "date/time when ON THAT call for speakers opens"
  callForOnSpeakersOpenDate: Date

  "date/time when ON THAT call for speakers closes"
  callForOnSpeakersCloseDate: Date

  "date/time ticket sales start"
  ticketsOnSaleFrom: Date

  "date/time ticket sales stop"
  ticketsOnSaleUntil: Date

  "When true a ticket is required to mutate session in this event"
  isTicketRequiredToMutate: Boolean

  "When true a ticket is required to join a session in this event"
  isTicketRequiredToJoin: Boolean

  "When true membership holders can mutate a session in this event"
  canMembershipMutate: Boolean

  "When true membership holders can join a session in this event"
  canMembershipJoin: Boolean

  "Will this event show in the list of events for a community. Must also be Active to show as a 'FEATURED' event"
  isFeatured: Boolean

  "This event is in an Active state. It is not in a draft state."
  isActive: Boolean

  "The community this Event is part of. Community.slug"
  community: Slug!

  "Represents the overall color theme for this event"
  theme: EventTheme

  "Type of event"
  type: EventType

  "Total follow count includes private and public profile favorites"
  followCount: Int

  "Members with public profile following/favoriting community Defaults: pageSize: 20"
  followers(pageSize: Int, cursor: String): PagedMember

  "assets assigned to this event"
  assets: [Asset]

  "products available from this event"
  products: [Product]

  "counselors/speakers with sessions in this event"
  speakers: [PublicProfile]

  "Explicit list of sessions to feature for event"
  featuredSessions: [AcceptedSession]!

  "Explicit list of speakers to feature for event"
  featuredSpeakers: [PublicProfile]!

  "admin event queries for this event"
  admin: EventAdminQuery @auth(requires: "event:admin:orderAllocations")
}
